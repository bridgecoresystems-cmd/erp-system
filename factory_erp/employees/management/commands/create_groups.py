# employees/management/commands/create_groups.py
from django.core.management.base import BaseCommand
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType

class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è ERP —Å–∏—Å—Ç–µ–º—ã'

    def handle(self, *args, **options):
        self.stdout.write('–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥—Ä—É–ø–ø—ã –∏ –∏—Ö –ø—Ä–∞–≤–∞
        groups_data = {
            'HR_Admins': {
                'description': 'HR –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º',
                'permissions': [
                    'employees.add_employee',
                    'employees.change_employee', 
                    'employees.delete_employee',
                    'employees.view_employee',
                    'employees.add_worktimeentry',
                    'employees.change_worktimeentry',
                    'employees.delete_worktimeentry',
                    'employees.view_worktimeentry',
                ]
            },
            'HR_Users': {
                'description': 'HR –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏',
                'permissions': [
                    'employees.view_employee',
                    'employees.add_worktimeentry',
                    'employees.change_worktimeentry',
                    'employees.view_worktimeentry',
                ]
            },
            'Security': {
                'description': '–°–ª—É–∂–±–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
                'permissions': [
                    'security.view_dashboard',
                    'security.add_shift',
                    'security.change_shift',
                    'security.view_shift',
                    'employees.view_employee',
                    'employees.view_cardaccess',
                ]
            },
            'Security_Users': {
                'description': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –ø—Ä–æ—Å–º–æ—Ç—Ä —ç–∫—Ä–∞–Ω–∞ –¥–æ—Å—Ç—É–ø–∞',
                'permissions': [
                    'employees.view_employee',
                    'employees.view_cardaccess',
                ]
            },
        }
        
        created_count = 0
        updated_count = 0
        
        for group_name, group_info in groups_data.items():
            group, created = Group.objects.get_or_create(name=group_name)
            
            if created:
                self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –≥—Ä—É–ø–ø–∞: {group_name}')
                created_count += 1
            else:
                self.stdout.write(f'‚ÑπÔ∏è –ì—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {group_name}')
                updated_count += 1
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
            permissions_added = 0
            for perm_codename in group_info['permissions']:
                try:
                    app_label, codename = perm_codename.split('.', 1)
                    # –ò—â–µ–º –ø—Ä–∞–≤–∞ –ø–æ –∫–æ–¥—É, –∏–≥–Ω–æ—Ä–∏—Ä—É—è app_label –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
                    permission = Permission.objects.filter(codename=codename).first()
                    if permission:
                        group.permissions.add(permission)
                        permissions_added += 1
                    else:
                        self.stdout.write(f'‚ö†Ô∏è –ü—Ä–∞–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {perm_codename}')
                except ValueError:
                    self.stdout.write(f'‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∞–≤–∞: {perm_codename}')
            
            if permissions_added > 0:
                self.stdout.write(f'  üìã –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–∞–≤: {permissions_added}')
        
        self.stdout.write(f'\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:')
        self.stdout.write(f'  ‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö –≥—Ä—É–ø–ø: {created_count}')
        self.stdout.write(f'  ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: {updated_count}')
        self.stdout.write(f'  ‚Ä¢ –í—Å–µ–≥–æ –≥—Ä—É–ø–ø: {len(groups_data)}')
        
        self.stdout.write('\n‚úÖ –ì—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
        self.stdout.write('\nüí° –¢–µ–ø–µ—Ä—å –Ω–∞–∑–Ω–∞—á—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É Django.')
