from django.core.management.base import BaseCommand
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType
from lohia_monitor.models import Machine, Shift, MaintenanceCall


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—ã Lohia: Operator –∏ Master, –∏ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∞–≤–∞'

    def handle(self, *args, **options):
        self.stdout.write('–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø Lohia...')

        machine_ct = ContentType.objects.get_for_model(Machine)
        shift_ct = ContentType.objects.get_for_model(Shift)
        maintenance_ct = ContentType.objects.get_for_model(MaintenanceCall)

        # –ù–∞–±–æ—Ä—ã –ø—Ä–∞–≤
        operator_perm_codenames = [
            # Machine: —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä
            ('view_machine', machine_ct),

            # Shift: —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ä—Ç/—Å—Ç–æ–ø (add/change –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ç–µ–∫—É—â–µ–π —Å–º–µ–Ω—ã), –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä
            ('add_shift', shift_ct),
            ('change_shift', shift_ct),
            ('view_shift', shift_ct),

            # MaintenanceCall: —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤—ã–∑–æ–≤, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å
            ('add_maintenancecall', maintenance_ct),
            ('view_maintenancecall', maintenance_ct),
        ]

        master_perm_codenames = [
            # Machine: –ø—Ä–æ—Å–º–æ—Ç—Ä
            ('view_machine', machine_ct),

            # Shift: –ø—Ä–æ—Å–º–æ—Ç—Ä (–º–∞—Å—Ç–µ—Ä –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç/–∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–º–µ–Ω—ã)
            ('view_shift', shift_ct),

            # MaintenanceCall: –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ (start/end)
            ('view_maintenancecall', maintenance_ct),
            ('change_maintenancecall', maintenance_ct),
        ]

        groups = {
            'Lohia_Operator': operator_perm_codenames,
            'Lohia_Master': master_perm_codenames,
        }

        for group_name, perms in groups.items():
            group, created = Group.objects.get_or_create(name=group_name)
            if created:
                self.stdout.write(self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –≥—Ä—É–ø–ø–∞: {group_name}'))
            else:
                self.stdout.write(self.style.WARNING(f'‚ÑπÔ∏è –ì—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {group_name}'))

            added = 0
            for codename, ct in perms:
                try:
                    perm = Permission.objects.get(content_type=ct, codename=codename)
                    group.permissions.add(perm)
                    added += 1
                except Permission.DoesNotExist:
                    self.stdout.write(self.style.ERROR(f'–ü—Ä–∞–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {codename} ({ct.app_label})'))

            self.stdout.write(f'  üìã –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–∞–≤: {added}')

        self.stdout.write(self.style.SUCCESS('‚úÖ –ì—Ä—É–ø–ø—ã Lohia —Å–æ–∑–¥–∞–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã'))


