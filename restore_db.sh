#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
# ERP —Å–∏—Å—Ç–µ–º–∞ - Factory ERP

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
DB_NAME="factory_erp_db"
DB_USER="erp_user"
DB_PASSWORD="erp_password123"
BACKUP_DIR="/home/batyr/projects/erp-system/backups"
LOG_FILE="${BACKUP_DIR}/restore.log"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [OPTIONS]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -f FILE    –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    echo "  -l         –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π"
    echo "  -h         –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 -f /home/batyr/projects/erp-system/backups/factory_erp_backup_20251005_131500.sql.gz"
    echo "  $0 -l"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –±—ç–∫–∞–ø–æ–≤
show_backups() {
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:"
    echo ""
    if [ -d "$BACKUP_DIR" ]; then
        ls -lh "${BACKUP_DIR}"/factory_erp_backup_*.sql.gz 2>/dev/null | while read line; do
            echo "   $line"
        done
    else
        echo "   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∫–æ–ø–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $BACKUP_DIR"
    fi
    echo ""
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
BACKUP_FILE=""
while getopts "f:lh" opt; do
    case $opt in
        f) BACKUP_FILE="$OPTARG" ;;
        l) show_backups; exit 0 ;;
        h) show_help; exit 0 ;;
        *) show_help; exit 1 ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª
if [ -z "$BACKUP_FILE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    echo ""
    show_help
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
if [ ! -f "$BACKUP_FILE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª '$BACKUP_FILE' –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo ""
    show_backups
    exit 1
fi

# –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
log_message "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö $DB_NAME –∏–∑ —Ñ–∞–π–ª–∞: $BACKUP_FILE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
if ! PGPASSWORD="$DB_PASSWORD" psql -h localhost -U "$DB_USER" -d postgres -c "SELECT 1;" > /dev/null 2>&1; then
    log_message "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
CURRENT_BACKUP="${BACKUP_DIR}/factory_erp_current_before_restore_$(date +%Y%m%d_%H%M%S).sql.gz"
log_message "üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è: $CURRENT_BACKUP"

if PGPASSWORD="$DB_PASSWORD" pg_dump -h localhost -U "$DB_USER" -d "$DB_NAME" \
    --verbose --clean --no-owner --no-privileges | gzip > "$CURRENT_BACKUP"; then
    log_message "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞"
else
    log_message "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Django —Å–µ—Ä–≤–µ—Ä (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)
if pgrep -f "python3 manage.py runserver" > /dev/null; then
    log_message "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Django —Å–µ—Ä–≤–µ—Ä..."
    pkill -f "python3 manage.py runserver"
    sleep 2
fi

# –£–¥–∞–ª—è–µ–º –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
log_message "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
PGPASSWORD="$DB_PASSWORD" psql -h localhost -U "$DB_USER" -d postgres -c "DROP DATABASE IF EXISTS $DB_NAME;"

log_message "üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
PGPASSWORD="$DB_PASSWORD" psql -h localhost -U "$DB_USER" -d postgres -c "CREATE DATABASE $DB_NAME OWNER $DB_USER;"

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
log_message "üì• –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."

if [[ "$BACKUP_FILE" == *.gz ]]; then
    # –°–∂–∞—Ç—ã–π —Ñ–∞–π–ª
    if gunzip -c "$BACKUP_FILE" | PGPASSWORD="$DB_PASSWORD" psql -h localhost -U "$DB_USER" -d "$DB_NAME"; then
        log_message "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    else
        log_message "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö!"
        exit 1
    fi
else
    # –û–±—ã—á–Ω—ã–π —Ñ–∞–π–ª
    if PGPASSWORD="$DB_PASSWORD" psql -h localhost -U "$DB_USER" -d "$DB_NAME" -f "$BACKUP_FILE"; then
        log_message "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    else
        log_message "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö!"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
log_message "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
TABLE_COUNT=$(PGPASSWORD="$DB_PASSWORD" psql -h localhost -U "$DB_USER" -d "$DB_NAME" -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" | xargs)
log_message "üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü: $TABLE_COUNT"

USER_COUNT=$(PGPASSWORD="$DB_PASSWORD" psql -h localhost -U "$DB_USER" -d "$DB_NAME" -t -c "SELECT COUNT(*) FROM auth_user;" 2>/dev/null | xargs || echo "0")
log_message "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $USER_COUNT"

log_message "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –°–≤–æ–¥–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:"
echo "   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_NAME"
echo "   –ò—Å—Ç–æ—á–Ω–∏–∫: $BACKUP_FILE"
echo "   –¢–∞–±–ª–∏—Ü: $TABLE_COUNT"
echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $USER_COUNT"
echo "   –í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M:%S')"
echo ""
echo "üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å Django —Å–µ—Ä–≤–µ—Ä:"
echo "   cd /home/batyr/projects/erp-system/factory_erp"
echo "   source ../venv/bin/activate"
echo "   python3 manage.py runserver"
echo ""
