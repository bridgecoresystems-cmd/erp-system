#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API RFID
"""
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SERVER_URL = "http://127.0.0.1:8000"
ESP32_ID = "LOHIA-001"

# –¢–µ—Å—Ç–æ–≤—ã–µ RFID UID –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
TEST_RFID_UIDs = [
    "A38B3B1C",      # Akmuradow Batyr
    "F1D31804",      # Akmuradowa Enejan  
    "049178C92B0289", # –ú–∞—Å—Ç–µ—Ä–æ–≤ –ü–µ—Ç—Ä
    "0134FE03",      # –ù–∞—á–∞–ª—å–Ω–∏–∫–æ–≤ –°–µ—Ä–≥–µ–π
]

def test_shift_start(rfid_uid):
    """–¢–µ—Å—Ç –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã"""
    url = f"{SERVER_URL}/lohia/api/shift/start/"
    data = {
        "esp32_id": ESP32_ID,
        "rfid_uid": rfid_uid
    }
    
    print(f"\nüöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Å–º–µ–Ω—ã —Å RFID: '{rfid_uid}'")
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º: {json.dumps(data, ensure_ascii=False)}")
    
    try:
        response = requests.post(url, json=data)
        print(f"üì• –û—Ç–≤–µ—Ç: {response.status_code}")
        print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    return False

def test_shift_end(rfid_uid):
    """–¢–µ—Å—Ç –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–º–µ–Ω—ã"""
    url = f"{SERVER_URL}/lohia/api/shift/end/"
    data = {
        "esp32_id": ESP32_ID,
        "rfid_uid": rfid_uid
    }
    
    print(f"\nüèÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Å–º–µ–Ω—ã —Å RFID: '{rfid_uid}'")
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º: {json.dumps(data, ensure_ascii=False)}")
    
    try:
        response = requests.post(url, json=data)
        print(f"üì• –û—Ç–≤–µ—Ç: {response.status_code}")
        print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    return False

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API RFID")
    print("=" * 50)
    
    for rfid_uid in TEST_RFID_UIDs:
        print(f"\n{'='*20} RFID: {rfid_uid} {'='*20}")
        
        # –¢–µ—Å—Ç –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã
        start_success = test_shift_start(rfid_uid)
        
        if start_success:
            # –ï—Å–ª–∏ –Ω–∞—á–∞–ª–æ —Å–º–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ, —Ç–µ—Å—Ç–∏—Ä—É–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ
            test_shift_end(rfid_uid)
        
        print("-" * 50)
